Ciclo de vida de un componente: 
Montado: cuando se va a renderizar, cuando va a entrar en acción --> usamos el metodo constructor 
CpomponentWIllMount: el componente apenas se va a montar, por ejemplo para setear cosas previo al montado no es recomendado para hacer bind de eventos como traer datos del api --> 
render: contiene todos los elementos a renderizar, aqui es cuando ya se va ahaber
componentDidMount: metofdo luego de montarse el componente, aqui ya podemos usar las apis del navegador, en este momento podemos pedir datos al api

ComponentWillRevicePorps: metodo llamado al recibir nuevas propiedades, sirve para acutlizar estadoc on base a las nuevas propiedades
shouldComponentUpdate: Metodo que condiciona si el componente se debe renderizar
componentWIllUpdate: renderizara el componente, le sigue el render
componentDidUpdate: cuando el compoente ya se actualizo

Desmontado: cuando ya se va a ir el compoente
componentWillAnmount: antes de que el componente sea desmontado de la palicación adiooooos

Manejo de errores: 
COmponentDidCatch: cuando el compoenente ya encontro un error, este es el metodo del ciclo de vida que sera llamado

Tipos de componenetes:

compinetes puros: ya tiene shouldComponentUpdate ya asigando, cuando el compoenente se vaya a modificar constantemente se debe usar este

componenetes funcionales: son funciones y solo retornan vistas, no tienen logica. no tienen ciclo de vida, es solo para la ui

dumb components y smartcomponetes:

dumb compponent: se fija encomo se ve, úede contener cualuqier tipo de componentens, permiten composicion con {props.childeres}, no depende del resto de la aplicacion
no especifica como los datos son cargados y como muta (recibe los datos directos), recibe datos y callbacks solo por propiedades, rara vez tiene su propio estado,
estan escritos como componentes funcionales, al menos que necesiten mejoras de performance

smart componente: se fifa en que hace, se concentran een el funcionamiento, van a cambiar los estados, etc, contiene componentes de ui u  otros smart componentes,
no tienen estilos eso es super imporntnte, proven de datos a la ui y a otros compoenentes, proven de calbacks a la ui, normalmente tienen estado, llaman acciones, 
generados por higher order components


